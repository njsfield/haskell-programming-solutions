Chapter Exercises
=================

Combinators?
===========

1) λx.xxx            (true) 
2) λxy.zx            (false - z a is free variable)
3) λxyz.xy(zx)       (true)
4) λxyz.xy(zxy)      (true)
5) λxy.xy(zxy)       (false - z is a free variable)

Normal form or diverge?
=======================

1) λx.xxx            (normal form)

  λx.xxx 1
  [x := 1]
  111

2) (λz.zz)(λy.yy)     (diverge)

  [z := (λy.yy)]
  (λy.yy)(λz.zz) 
  ...

3) (λx.xxx)z          (normal form)

  [x := z]
  zzz

Beta Reduce
===========

1) (λabc.cba)zz(λwv.w) 

  = (λa(λb(λc.cba)))zz(λwv.w)
  [a := z]
  = (λb.(λc.cbz))z(λwv.w)
  [b := z]
  = (λc.czz)(λwv.w) 
  [c := λwv.w]
  = (λwv.w)zz
  = (λw.(λv.w))zz
  [w := z]
  = (λv.z)z
  [v := z] 
  = z

2) (λx.λy.xyy)(λa.a)b

  (λx.(λy.xyy))(λa.a)b
  [x := λa.a]
  = (λy.(λa.a)yy)b
  [y := b]
  = (λa.a)bb
  [a := b]
  = bb

3) (λy.y)(λx.xx)(λz.zq) 

  [y := λx.xx]
  = (λx.xx)(λz.zq)
  [x := λz.zq]
  = (λz.zq)(λz.zq)
  [z := λz.zq] 
  = (λz.zq)q
  [z := q]
  = qq

4) (λz.z)(λz.zz)(λz.zy) 

  [z := λz.zz] 
  = (λz.zz)(λz.zy)
  [z := λz.zy]
  = (λz.zy)(λz.zy)
  = yy

5) (λx.λy.xyy)(λy.y)y

  = (λx.(λy.xyy))(λy.y)y
  [x := λy.y]
  = (λy.(λy.y)yy)y
  [y := y] 
  = (λy.y)yy
  [y := y] 
  = yy

6) (λa.aa)(λb.ba)c

  [a := λb.ba]
  = (λb.ba)(λb.ba)c
  [b := λb.ba]
  = (λb.ba)ac 
  [b := a]
  = aac

7) (λxyz.xz(yz))(λx.z)(λx.a)
  = (λx.(λy.(λz.xz(yz))))(λx.z)(λx.a)
  
  rename the bound z variable to z'
  to prevent confusion
 
  = (λx.(λy.(λz'.xz'(yz'))))(λx.z)(λx.a)
  [x := λx.z]
  = (λy.(λz'.(λx.z)z'(yz')))(λx.a)
  [y := λx.a]
  = λz'.(λx.z)z'((λx.a)z') 
  [x := z']
  = λz'.z(λx.a)z') -- z' thrown aray
  [x := z']
  = λz'.za -- z' thrown aray
